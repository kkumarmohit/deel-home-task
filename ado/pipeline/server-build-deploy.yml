trigger:
- none

stages:
- stage: Validate
  displayName: Validate Application
  jobs:
  - job: Validate
    displayName: Validate Flask Application
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self 
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - script: |
        cd $(Agent.BuildDirectory)/s
        ls
        python -m venv venv
        source ./venv/bin/activate
        pip install flask requests
        python -m unittest tests.test-app
      displayName: Run Unit Tests

- stage: BuildAndPush
  displayName: Build and Push Docker Image
  dependsOn: Validate
  jobs:
  - job: Build
    displayName: Build and Push Docker Image to ACR
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - task: DockerInstaller@0
      displayName: Install Docker

    - script: |
        echo "Building Docker image..."
        docker build -t $(acrName).azurecr.io/$(imageName):$(Build.BuildId) -f app/Dockerfile .
        echo "$(DOCKER_PASSWORD)" | docker login $(acrName).azurecr.io -u $(DOCKER_USERNAME) --password-stdin
        docker push $(acrName).azurecr.io/$(imageName):$(Build.BuildId)
      displayName: Build and Push Docker Image
      env:
        DOCKER_USERNAME: $(DOCKER_USERNAME)
        DOCKER_PASSWORD: $(DOCKER_PASSWORD)

- stage: Deploy
  displayName: Deploy to Azure Container Instance
  dependsOn: BuildAndPush
  jobs:
  - job: Deploy
    displayName: Bicep deployment
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
       az login --service-principal \
          --username $(AZURE_CLIENT_ID) \
          --password $(AZURE_CLIENT_SECRET) \
          --tenant $(AZURE_TENANT_ID)
        az deployment group create \
          --resource-group $(RESOURCE_GROUP) \
          --template-file ado/templates/main.bicep \
          --parameters acrName=$(acrName) imageTag=$(Build.BuildId)
      displayName: Deploy resources